# -*- coding: utf-8 -*-
"""challenge_ml_consumo_API_produtos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ntdvqHH1772rcQgDgEzqxgeo9-lGtf3U

Realizar un análisis sobre la oferta/vidriera de las opciones de productos que responden a distintas búsquedas en el sitio Mercadolibre.com.ar
"""

import requests
import json
import csv

# Produtos
produtos = ["Chromecast", "Apple TV", "Amazon Fire TV", "Mi Stick"]

# Abrindo arquivo csv
csv_file = open('produtos_api.csv', 'w', newline='', encoding='utf-8')
escrever_csv = csv.writer(csv_file)

# Gravando o cabecalho
escrever_csv.writerow(["id", "title", "price", "sold_quantity", "available_quantity", "condition", "site_id", "category_id"])

# Funcao para pegar os detalhes do item (Por cada resultado, realizar el correspondiente GET por Item_Id al recurso público)
def escreve_detalhe_item(item_id):
    url = f'https://api.mercadolibre.com/items/{item_id}'
    response = requests.get(url)
    if response.status_code == 200:
        item_data = json.loads(response.text)
        escrever_csv.writerow([item_data["id"], item_data["title"], item_data["price"], item_data["sold_quantity"], item_data["available_quantity"], item_data["condition"], item_data["site_id"], item_data["category_id"]])
    else:
        print(f"Erro ao obter detalhes do item {item_id}")

# Loop dos produtos buscados (Barrer una lista de más de 150 ítems ids en el servicio público)
for produto in produtos:
    url = f'https://api.mercadolibre.com/sites/MLA/search?q={produto}&limit=50' # Busca limitada a 50 linhas
    response = requests.get(url)
    if response.status_code == 200:
        resultado = json.loads(response.text)
        items = resultado["results"]
        for item in items:
            escreve_detalhe_item(item["id"])
    else:
        print(f"Erro ao obter resultados para {produto}")

# Fechar o arquivo CSV
csv_file.close()

print("Concluído. Arquivo 'produtos_api.csv' populado.")